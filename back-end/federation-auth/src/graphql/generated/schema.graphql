directive @key(fields: String!) on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum AuthType {
  PASSWORD
  MFA_CODES
  WEBAUTHN
}

enum Role {
  USER
  ADMIN
}

type Language {
  """language id"""
  languageId: ID!

  """language code"""
  code: String!

  """language name"""
  name: String!

  """language native"""
  native: String!

  """user security settings"""
  users: [User]

  """created at"""
  created_at: DateTime!

  """updated at"""
  updated_at: DateTime!

  """deleted row"""
  deleted: Boolean!
}

type Security {
  """security id"""
  securityId: ID!

  """security auth type"""
  type: AuthType!

  """security secret"""
  secret: String!

  """security recovery"""
  recovery: String!

  """security auxiliary"""
  auxiliary: String!

  """security metadata"""
  metadata: String!

  """security user"""
  user: User

  """id of the user"""
  userId: Int!

  """created at"""
  created_at: DateTime!

  """updated at"""
  updated_at: DateTime!

  """deleted row"""
  deleted: Boolean!
}

type User {
  """user id"""
  userId: ID!

  """user email"""
  email: String!

  """user password"""
  password: String!

  """user auth token"""
  token: String

  """is user active now?"""
  active: Boolean!

  """user role"""
  role: Role!

  """user language"""
  language: Language

  """id of the language"""
  languageId: Int!

  """user security settings"""
  security: Security

  """user firstname"""
  firstname: String!

  """user lastname"""
  lastname: String!

  """user handle"""
  username: String

  """user phone"""
  phone: String

  """user address"""
  address: String

  """user avatar"""
  avatar: String

  """user banner"""
  banner: String

  """created at"""
  created_at: DateTime!

  """updated at"""
  updated_at: DateTime!

  """deleted row"""
  deleted: Boolean!
}

"""Login input"""
input loginInput {
  """The user email."""
  email: String!

  """The user password."""
  password: String!
}

"""Login payload"""
type loginPayload {
  """The user token."""
  token: String!
}

"""Register input"""
input registerInput {
  """The user email."""
  email: String!

  """The user password."""
  password: String!

  """The language id."""
  languageId: Int!

  """The user first name."""
  firstname: String!

  """The user last name."""
  lastname: String!
}

"""Register payload"""
type registerPayload {
  """The user token."""
  token: String!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!

  """Get all Languages query"""
  Language: [Language]

  """Get all Users query"""
  User(
    """Starting record"""
    skip: Int

    """Records shown"""
    take: Int

    """username string"""
    username: String
  ): [User]

  """Get me query"""
  me: User
}

union _Entity = Language | Security | User

scalar _Any

type _Service {
  """
  The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied
  """
  sdl: String
}

type Mutation {
  """login"""
  login(input: loginInput): loginPayload

  """register"""
  register(input: registerInput): registerPayload
}
